library(devtools)
find.package(devtools)
install.packages(devtools)
install.packages(devtools)
install.packages(devtools)
find.package(devtools)
library(devtools)
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages("KernSmooth")
KernSmooth
library(KernSmooth)
install.packages("swirl")
pwd
setwd("C:/Users/C06025A/datasciencecoursera")
x<-1
x
print(x)
msg<-'hello'
msg
x<-
x
print(x)
#dfdsfsdf
clear
clc
cls
x<-5
x
x<-1:20
x
x
1/0
?:
:?
b = c(1:20)
print(b)
source(b)
b
type(b)
kind(b)
z = c(True, True, FALSE)
z = (TRUE, TRUE, FALSE)
z <- (TRUE, TRUE, FALSE)
z <- (TRUE,TRUE,FALSE)
z <- (TRUE,FALSE)
z <- (TRUE,FALSE)
z <- c(TRUE,TRUE,FALSE)
z
x<-vector("numeric", length = 10)
x
y<-c(1.7,TRUE,"a")
y
m<-matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m<-1:10
m
dim(m) <- c(2,5)
m
x<-1:3
y<-10:12
x
y
cbind(x,y)
rbind(x,y)
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x<-factor(c("yes","yes","no","yes","no")), levels = c("yes", "no")
x<-factor(c("yes","yes","no","yes","no"), levels = c("yes", "no"))
x
x<-factor(c("assistant","assistant","tenure","associate","tenure"), levels = c("yes", "no"))
x
x<-factor(c("assistant","assistant","tenure","associate","tenure"), levels = c("assistant", "tenure", "associate"))
x
table(x)
unclass(x)
unclass(x)
x
unclass(x)
x
x<-facter(c(g,w,t,y,g,r,t,y,w,w,r,t,))
x<-factor(c(g,w,t,y,g,r,t,y,w,w,r,t,))
x<-factor(c(g,w,t,y,g,r,t,y,w,w,r,t,), levels = "g, w, t, y, r")
x<-factor(c("g,w,t,y,g,r,t,y,w,w,r,t"), levels = ("g, w, t, y, r"))
x
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g, w, t, y, r"))
x
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g", "w", "t", "y", "r"))
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g", "w", "t", "y", "r"))
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = c("g", "w", "t", "y", "r"))
x
unclass(x)
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/corr.R')
setwd("C:/Users/C06025A/datasciencecoursera/R Programming/Week 2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/corr.R')
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
install.packages("curl")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
setwd("C:/Users/C06025A/datasciencecoursera/R Programming/Week 2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the length of id vector
complete_data <- c(length(id))
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for (i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
complete_data[j] <- sum(complete.cases(current_file))
j <- j + 1
}
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
submit()
submit(manual=TRUE)
submit()
submit()
submit()
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/pollutantmean.R')
submit()
install.packages("swirl")
library(swirl)
re(list=ls())
rm(list=ls())
swirl()
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/complete.R')
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/corr.R')
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
submit()
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/complete.R')
source('C:/Users/C06025A/datasciencecoursera/R Programming/Week 2/corr.R')
submit()
