library(devtools)
find.package(devtools)
install.packages(devtools)
install.packages(devtools)
install.packages(devtools)
find.package(devtools)
library(devtools)
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages("KernSmooth")
KernSmooth
library(KernSmooth)
install.packages("swirl")
pwd
setwd("C:/Users/C06025A/datasciencecoursera")
x<-1
x
print(x)
msg<-'hello'
msg
x<-
x
print(x)
#dfdsfsdf
clear
clc
cls
x<-5
x
x<-1:20
x
x
1/0
?:
:?
b = c(1:20)
print(b)
source(b)
b
type(b)
kind(b)
z = c(True, True, FALSE)
z = (TRUE, TRUE, FALSE)
z <- (TRUE, TRUE, FALSE)
z <- (TRUE,TRUE,FALSE)
z <- (TRUE,FALSE)
z <- (TRUE,FALSE)
z <- c(TRUE,TRUE,FALSE)
z
x<-vector("numeric", length = 10)
x
y<-c(1.7,TRUE,"a")
y
m<-matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m<-1:10
m
dim(m) <- c(2,5)
m
x<-1:3
y<-10:12
x
y
cbind(x,y)
rbind(x,y)
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x<-factor(c("yes","yes","no","yes","no")), levels = c("yes", "no")
x<-factor(c("yes","yes","no","yes","no"), levels = c("yes", "no"))
x
x<-factor(c("assistant","assistant","tenure","associate","tenure"), levels = c("yes", "no"))
x
x<-factor(c("assistant","assistant","tenure","associate","tenure"), levels = c("assistant", "tenure", "associate"))
x
table(x)
unclass(x)
unclass(x)
x
unclass(x)
x
x<-facter(c(g,w,t,y,g,r,t,y,w,w,r,t,))
x<-factor(c(g,w,t,y,g,r,t,y,w,w,r,t,))
x<-factor(c(g,w,t,y,g,r,t,y,w,w,r,t,), levels = "g, w, t, y, r")
x<-factor(c("g,w,t,y,g,r,t,y,w,w,r,t"), levels = ("g, w, t, y, r"))
x
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g, w, t, y, r"))
x
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g", "w", "t", "y", "r"))
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = ("g", "w", "t", "y", "r"))
x<-factor(c("g","w","t","y","g","r","t","y","w","w","r","t"), levels = c("g", "w", "t", "y", "r"))
x
unclass(x)
setwd("C:/Users/C06025A/datasciencecoursera/R Programming/Week 2")
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
x <- c(1,2,3,4,5,6,7,8,9,0)
columnmean(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
airquality[,3]
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
lm
lm()
lm(airquality)
search()
library(ggplot2)
search()
make.power <- function(n){
pow<- function(x){
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
ls(environment(cube))
get("n", environment(cube))
x <- as.Date("1970-01-01")
x
unclass(x)
x <- 1:10
class(x)
type(x)
typeof(x)
x <- 0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
print(y)
grep()
grep(x)
